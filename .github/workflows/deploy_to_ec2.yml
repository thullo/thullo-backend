# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      #    - name: Build with Gradle (generate jar)
      #     uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Execute Gradle build
        run: ./gradlew build -x test
      - name: list generated jar location directory
        run: ls ./build/libs
      - name: remove unwanted file
        run: find ./build/libs -type f -name "*plain.jar" -exec rm {} \;


      - name: ssh-scp-ssh-pipelines
        # You may pin to the exact commit or the version.
        # uses: cross-the-world/ssh-scp-ssh-pipelines@78e864b4890087a58248ff39320406971ca88b89
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
        with:
          # ssh remote host
          host: ec2-3-83-152-86.compute-1.amazonaws.com
          # ssh remote port
          port: 22
          # optional, default is 22
          # ssh remote user
          user: ubuntu
          key: |
              -----BEGIN RSA PRIVATE KEY-----
              MIIEpAIBAAKCAQEA0cxHgqQK+Fgh7BFCVQNIFuNSfFIWgxHt0oPKSXKOsa70AkC3
              bQj0O8N1q6EQFoa5d/s60FZ3XvwOTjlxtRNjqggjuinIiSuxeW14c8CTl2Ui7MlY
              KANgCK9e8rBcUtrzWrBp05JbovvEX+xKVdjZyX8dpjKMBOAWUcC9BFCygYz3dqpg
              wuvYnBy0IML2pCLUt8ddaGLSX3MckwMBP6yAFuf+KscdWc21ZH2xKtun/8+mxbwg
              +AmgiQEXuPO6drezfn1GqZs69egPOcyd4cuPqhpCmATm2FC/o3XX71Xe9PlUzf6C
              BexqJ3jIM5xExxIdPGLPTerD43FdjEN14LRjWwIDAQABAoIBAAovrvEq4dV5Afyi
              QeQ6yo9B7klW+vzWLAPinjm+tCrwYaySU9WZb7JPJTF2Gn/dfrfSnOJssFMOTeuC
              YoD2NgqVZpatXK08T9ujcwu7t+7L3Ew+4mbe8xS43xVNds4XD2XB1wGMw6JAMyKt
              KFbOtpRP9bKSFbZO4waJIyRIfsJHbWA86Q5oFgIfDQ6559RTSCMSfrXUVfnfi405
              DFUqftbbOeCoWBrxY568VNyyW7IJUI7NWSQue/ijcUwPwOwMFJmPBZrqg6AKW4/W
              Kv6i1VgbSLy46isIrRJ2VdAPkaWFkS1KKRApKhqoNv31ZtsfJh1nHvZ3zhUVd7Wf
              SlAISAECgYEA72y5rRrFuL8FCDlMNh0FD0ZiXAM8oG+WA6FUJA57J/qYkZ/LiWYi
              7NcSPgckKE625x+om1Y+Iw+MHqSqwwu8Sebmk4tEXFEoLYcbkiIIsy3gifqVXNQ1
              T/jFr0rTg2DJJX4/dAj/XY0fnJVZ6NZr+bACkgfUHzSKW80Y23t19gECgYEA4FJ8
              Q2ZoYkz/R62fGDPWxmFA0b25Ryjc0mfmaXvybgu7VQ9jyHbYb2alPz7Pw4/edAOR
              1kiFzlHCsf/D+tAcWJCzP0WXMC2FLuq1Us3vRc1ul06exgmrwnD4iz7d769Ilg+Z
              NqvPvkGp+RR+Jno48hspBP11X0L4pH65VMcv8VsCgYEA0GTPPFeoL4S8SYstxY/+
              vmvh4vrCQ1a8uQ4r4XJlScf6Eg6HJ2GqFoGglDK9CwRweL16kTJAxV2b9XQYWcqW
              KbD7kwLODphpIy+NFOXgsqzE2vQsG29ts9zxnADCF4Efsy2u5z2JoBDcqfrpFhvE
              QcEsi5Sa0kp1/y+GakuMwgECgYAL1S4K3B8LeGZK4KSwwSNGKaEirzBTyZsEWki0
              Lb6XAXVrQjmQPHykO7Thxi1tcmxYkEukEwVD4do0S3qKA2pLXa6m2sPj3bLVy7mu
              2YASnYiE4LfNWHs/8Xea2MEaQJPCnqYFVUDLF2mg4uzYmL/iPX6HbdtAICc/fhPG
              ng8wWwKBgQDBMjWsF5FKk41yONDAdU36cVdgvPywxJ6XMLP5VJQBjwxivo5sgeW2
              7kSJUChrnw1lM+Whi2/hn4dv6VbrALwzXT2PgscOEMrbCGlwylkxR/oiiZWQIjIA
              bBnG113QSVVLukSBoenzRkoUlXHMqou9sLCRBTGBFhpCi8hQTtSjYw==
              -----END RSA PRIVATE KEY-----
          # ssh remote password # optional
#          pass: Kayleaf1maos
          # connection timeout to remote host
          #connect_timeout: # optional, default is 30s
          # execute pre-commands before scp # optional
          first_ssh: |-
            rm -rf thullo_backend
            mkdir -p thullo_backend
          # scp from local to remote # optional
          scp: |-
            "./Dockerfile" => "thullo_backend"
            "./build/libs/thullo_backend*.jar" => "thullo_backend"
          #./Dockerfile => access-service/Dockerfile
          #build/libs/access-service-0.0.1-SNAPSHOT.jar root@194.163.131.85:
          # execute post-commands after scp
          last_ssh: |-
            cd thullo_backend
            docker stop thullo_backend || true
            docker rm thullo_backend || true
            docker rmi thullo_backend || true
            docker build -t thullo_backend ./
            docker run -dp 8080:8080 --restart always --name thullo_backend thullo_backend
