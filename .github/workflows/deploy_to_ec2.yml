# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      #    - name: Build with Gradle (generate jar)
      #     uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Execute Gradle build
        run: ./gradlew build -x test
      - name: list generated jar location directory
        run: ls ./build/libs
      - name: remove unwanted file
        run: find ./build/libs -type f -name "*plain.jar" -exec rm {} \;


      - name: ssh-scp-ssh-pipelines
        # You may pin to the exact commit or the version.
        # uses: cross-the-world/ssh-scp-ssh-pipelines@78e864b4890087a58248ff39320406971ca88b89
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
        with:
          # ssh remote host
          host: ec2-3-83-152-86.compute-1.amazonaws.com
          # ssh remote port
          port: 22
          # optional, default is 22
          # ssh remote user
          user: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # ssh remote password # optional
#          pass: Kayleaf1maos
          # connection timeout to remote host
          #connect_timeout: # optional, default is 30s
          # execute pre-commands before scp # optional
          first_ssh: |-
            rm -rf thullo_backend
            mkdir -p thullo_backend
          # scp from local to remote # optional
          scp: |-
            "./Dockerfile" => "thullo_backend"
            "./build/libs/thullo*.jar" => "thullo_backend"
          #./Dockerfile => access-service/Dockerfile
          #build/libs/access-service-0.0.1-SNAPSHOT.jar root@194.163.131.85:
          # execute post-commands after scp
          last_ssh: |-
            cd thullo_backend
            docker stop thullo_backend || true
            docker rm thullo_backend || true
            docker rmi thullo_backend || true
            docker build -t thullo_backend ./
            docker run -dp 8080:8080 --restart always --name thullo_backend thullo_backend
